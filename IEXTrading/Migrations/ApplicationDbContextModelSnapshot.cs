// <auto-generated />
using IEXTrading.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace IEXTrading.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IEXTrading.Models.Company", b =>
                {
                    b.Property<string>("symbol")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("date");

                    b.Property<string>("iexId");

                    b.Property<bool>("isEnabled");

                    b.Property<string>("name");

                    b.Property<string>("type");

                    b.HasKey("symbol");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("IEXTrading.Models.Equity", b =>
                {
                    b.Property<int>("EquityId")
                        .ValueGeneratedOnAdd();

                    b.Property<float>("change");

                    b.Property<float>("changeOverTime");

                    b.Property<float>("changePercent");

                    b.Property<float>("close");

                    b.Property<string>("date");

                    b.Property<float>("high");

                    b.Property<string>("label");

                    b.Property<float>("low");

                    b.Property<float>("open");

                    b.Property<string>("symbol");

                    b.Property<int>("unadjustedVolume");

                    b.Property<int>("volume");

                    b.Property<float>("vwap");

                    b.HasKey("EquityId");

                    b.HasIndex("symbol");

                    b.ToTable("Equities");
                });

            modelBuilder.Entity("IEXTrading.Models.Gainers", b =>
                {
                    b.Property<string>("symbol")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("companyName");

                    b.Property<string>("primaryExchange");

                    b.Property<string>("sector");

                    b.HasKey("symbol");

                    b.ToTable("Gainers");
                });

            modelBuilder.Entity("IEXTrading.Models.Equity", b =>
                {
                    b.HasOne("IEXTrading.Models.Company")
                        .WithMany("Equities")
                        .HasForeignKey("symbol");
                });
#pragma warning restore 612, 618
        }
    }
}
